{"version":3,"sources":["webpack:///./src/components/header.tsx","webpack:///./src/templates/page-template.tsx","webpack:///./src/components/layout-wp.tsx"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","query","PageTemplate","data","wpgraphql","page","title","content","dangerouslySetInnerHTML","__html","LayoutWP","children","dataQuery","url","generalSettings","menuItems","menus","nodes","map","item","label","replace","id","filter","paddingTop","fontFamily","display","Date","getFullYear","href"],"mappings":"2FAAA,qCAoCeA,IA7BiB,SAAC,GAAD,QAAGC,iBAAH,MAAe,GAAf,SAC9B,4BACEC,MAAO,CACLC,WAAY,SACZC,aAAc,MAGhB,yBACEF,MAAO,CACLG,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGX,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAO,QACPC,eAAgB,SAGjBT,Q,yDC7BX,kFAIaU,EAAQ,aAqBNC,UAVM,SAAC,GAAa,QAAXC,KACUC,UAAUC,KAAlCC,EADyB,EACzBA,MAAOC,EADkB,EAClBA,QACf,OACE,kBAAC,IAAD,CAAUD,MAAM,oBACd,wBAAIE,wBAAyB,CAAEC,OAAQH,KACvC,yBAAKE,wBAAyB,CAAEC,OAAQF,Q,mHC4E/BG,IAlFE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,MAItBM,EAAY,OAoBZC,EAAMD,EAAUR,UAAUU,gBAAgBD,IAG1CE,EAAYH,EAAUR,UAAUY,MAAMC,MAAM,GAAGF,UAAUE,MAAMC,KACnE,SAACC,GAAD,MAAW,CACTC,MAAOD,EAAKC,MACZP,IAAKM,EAAKN,IAAIQ,QAAQR,EAAK,QAI/B,OACE,oCACE,kBAAC,IAAD,CAAQtB,UAAWe,IACnB,gCACE,8BAEA,wBAAIgB,GAAG,WACJP,EACEQ,QAAO,SAACJ,GAAD,MAAuB,MAAbA,EAAKN,OACtBK,KAAI,SAACC,GAAD,OACH,4BACE,kBAAC,OAAD,CAAMrB,GAAIqB,EAAKN,KAAMM,EAAKC,aAMpC,yBACE5B,MAAO,CACLG,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACT2B,WAAY,OACZC,WAAY,UAGd,8BAAOd,GACP,6BACE,kBAAC,OAAD,CAAMb,GAAG,SAAT,kBADF,KAC2C,IACzC,kBAAC,OAAD,CAAMA,GAAG,KAAT,qBAGF,gCACE,yBAAKN,MAAO,CAAEK,QAAS,MAAO6B,QAAS,SAAvC,MACK,IAAIC,MAAOC,cADhB,gBAGE,uBAAGC,KAAK,0BAAR,kB","file":"component---src-templates-page-template-tsx-2350efe675c8777ff581.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\n\ninterface Props {\n  siteTitle: string\n}\n\nconst Header: React.FC<Props> = ({ siteTitle = \"\" }) => (\n  <header\n    style={{\n      background: `orange`,\n      marginBottom: `0`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h3 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h3>\n    </div>\n  </header>\n)\n\nexport default Header\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport LayoutWP from \"../components/layout-wp\"\n\nexport const query = graphql`\n  query($id: ID!) {\n    wpgraphql {\n      page(id: $id) {\n        title\n        content\n      }\n    }\n  }\n`\n// @ts-ignore\nconst PageTemplate = ({ data }) => {\n  const { title, content } = data.wpgraphql.page\n  return (\n    <LayoutWP title=\"WP Page Template\">\n      <h1 dangerouslySetInnerHTML={{ __html: title }} />\n      <div dangerouslySetInnerHTML={{ __html: content }} />\n    </LayoutWP>\n  )\n}\n\nexport default PageTemplate\n","/**\n * Layout component that queries for dataQuery\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout-wp.css\"\n// @ts-ignore\nconst LayoutWP = ({ children, title }) => {\n  // @ts-ignore\n  const rootPath = `${__PATH_PREFIX__}/`\n\n  const dataQuery = useStaticQuery(graphql`\n    query WPBlogQuery {\n      wpgraphql {\n        menus {\n          nodes {\n            menuItems {\n              nodes {\n                url\n                label\n              }\n            }\n          }\n        }\n        generalSettings {\n          url\n        }\n      }\n    }\n  `)\n\n  const url = dataQuery.wpgraphql.generalSettings.url\n  // TODO: this is ugly :(\n  // @ts-ignore\n  const menuItems = dataQuery.wpgraphql.menus.nodes[0].menuItems.nodes.map(\n    (item) => ({\n      label: item.label,\n      url: item.url.replace(url, \"\"),\n    })\n  )\n\n  return (\n    <>\n      <Header siteTitle={title} />\n      <header>\n        <div></div>\n\n        <ul id=\"navlist\">\n          {menuItems\n            .filter((item) => item.url !== \"/\")\n            .map((item) => (\n              <li>\n                <Link to={item.url}>{item.label}</Link>\n              </li>\n            ))}\n        </ul>\n      </header>\n\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: \"50px\",\n          fontFamily: \"arial\",\n        }}\n      >\n        <main>{children}</main>\n        <pre>\n          <Link to=\"/blog\">Blog Main Page</Link> |{\" \"}\n          <Link to=\"/\">Gatsby Home Page</Link>\n        </pre>\n\n        <footer>\n          <pre style={{ padding: \"3em\", display: \"flex\" }}>\n            Â© {new Date().getFullYear()} Copyleft\n            {` `}\n            <a href=\"https://www.gatsby.org\">By Right</a>\n          </pre>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayoutWP.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default LayoutWP\n"],"sourceRoot":""}