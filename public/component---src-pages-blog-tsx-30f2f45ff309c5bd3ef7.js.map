{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/layout-wp.tsx"],"names":["query","Blog","posts","data","wpgraphql","nodes","title","map","post","key","id","style","borderBottom","to","uri","dangerouslySetInnerHTML","__html","excerpt","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","color","textDecoration","LayoutWP","children","dataQuery","url","generalSettings","menuItems","menus","item","label","replace","filter","paddingTop","fontFamily","display","Date","getFullYear","href"],"mappings":"6FAAA,8FAIaA,EAAQ,aAqCNC,UAtBF,SAAC,GAAa,IACnBC,EADmB,EAAXC,KACKC,UAAUF,MAAMG,MAEnC,OACE,kBAAC,IAAD,CAAUC,MAAM,2BACd,4BACGJ,EAAMK,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,IACZ,wBAAIC,MAAO,CAAEC,aAAc,mBACzB,kBAAC,OAAD,CACEC,GAAE,QAAUL,EAAKM,IACjBC,wBAAyB,CAAEC,OAAQR,EAAKF,UAG5C,yBAAKS,wBAAyB,CAAEC,OAAQR,EAAKS,mB,kCCjCzD,qCAoCeC,IA7BiB,SAAC,GAAD,QAAGC,iBAAH,MAAe,GAAf,SAC9B,4BACER,MAAO,CACLS,WAAY,SACZC,aAAc,MAGhB,yBACEV,MAAO,CACLW,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGX,wBAAIb,MAAO,CAAEW,OAAQ,IACnB,kBAAC,OAAD,CACET,GAAG,IACHF,MAAO,CACLc,MAAO,QACPC,eAAgB,SAGjBP,Q,gICmEIQ,IAlFE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,SAAUtB,EAAY,EAAZA,MAItBuB,EAAY,OAoBZC,EAAMD,EAAUzB,UAAU2B,gBAAgBD,IAG1CE,EAAYH,EAAUzB,UAAU6B,MAAM5B,MAAM,GAAG2B,UAAU3B,MAAME,KACnE,SAAC2B,GAAD,MAAW,CACTC,MAAOD,EAAKC,MACZL,IAAKI,EAAKJ,IAAIM,QAAQN,EAAK,QAI/B,OACE,oCACE,kBAAC,IAAD,CAAQX,UAAWb,IACnB,gCACE,8BAEA,wBAAII,GAAG,WACJsB,EACEK,QAAO,SAACH,GAAD,MAAuB,MAAbA,EAAKJ,OACtBvB,KAAI,SAAC2B,GAAD,OACH,4BACE,kBAAC,OAAD,CAAMrB,GAAIqB,EAAKJ,KAAMI,EAAKC,aAMpC,yBACExB,MAAO,CACLW,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTc,WAAY,OACZC,WAAY,UAGd,8BAAOX,GACP,6BACE,kBAAC,OAAD,CAAMf,GAAG,SAAT,kBADF,KAC2C,IACzC,kBAAC,OAAD,CAAMA,GAAG,KAAT,qBAGF,gCACE,yBAAKF,MAAO,CAAEa,QAAS,MAAOgB,QAAS,SAAvC,MACK,IAAIC,MAAOC,cADhB,gBAGE,uBAAGC,KAAK,0BAAR,kB","file":"component---src-pages-blog-tsx-30f2f45ff309c5bd3ef7.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport LayoutWP from \"../components/layout-wp\"\n\nexport const query = graphql`\n  query {\n    wpgraphql {\n      posts {\n        nodes {\n          id\n          title\n          uri\n          excerpt\n        }\n      }\n    }\n  }\n`\n// @ts-ignore\nconst Blog = ({ data }) => {\n  const posts = data.wpgraphql.posts.nodes\n\n  return (\n    <LayoutWP title=\"Gatsby WP Jamstack Demo\">\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h2 style={{ borderBottom: \"1px solid gray\" }}>\n              <Link\n                to={`/blog${post.uri}`}\n                dangerouslySetInnerHTML={{ __html: post.title }}\n              />\n            </h2>\n            <div dangerouslySetInnerHTML={{ __html: post.excerpt }} />\n          </li>\n        ))}\n      </ul>\n    </LayoutWP>\n  )\n}\n\nexport default Blog\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\ninterface Props {\n  siteTitle: string\n}\n\nconst Header: React.FC<Props> = ({ siteTitle = \"\" }) => (\n  <header\n    style={{\n      background: `orange`,\n      marginBottom: `0`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h3 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h3>\n    </div>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for dataQuery\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout-wp.css\"\n// @ts-ignore\nconst LayoutWP = ({ children, title }) => {\n  // @ts-ignore\n  const rootPath = `${__PATH_PREFIX__}/`\n\n  const dataQuery = useStaticQuery(graphql`\n    query WPBlogQuery {\n      wpgraphql {\n        menus {\n          nodes {\n            menuItems {\n              nodes {\n                url\n                label\n              }\n            }\n          }\n        }\n        generalSettings {\n          url\n        }\n      }\n    }\n  `)\n\n  const url = dataQuery.wpgraphql.generalSettings.url\n  // TODO: this is ugly :(\n  // @ts-ignore\n  const menuItems = dataQuery.wpgraphql.menus.nodes[0].menuItems.nodes.map(\n    (item) => ({\n      label: item.label,\n      url: item.url.replace(url, \"\"),\n    })\n  )\n\n  return (\n    <>\n      <Header siteTitle={title} />\n      <header>\n        <div></div>\n\n        <ul id=\"navlist\">\n          {menuItems\n            .filter((item) => item.url !== \"/\")\n            .map((item) => (\n              <li>\n                <Link to={item.url}>{item.label}</Link>\n              </li>\n            ))}\n        </ul>\n      </header>\n\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: \"50px\",\n          fontFamily: \"arial\",\n        }}\n      >\n        <main>{children}</main>\n        <pre>\n          <Link to=\"/blog\">Blog Main Page</Link> |{\" \"}\n          <Link to=\"/\">Gatsby Home Page</Link>\n        </pre>\n\n        <footer>\n          <pre style={{ padding: \"3em\", display: \"flex\" }}>\n            Â© {new Date().getFullYear()} Copyleft\n            {` `}\n            <a href=\"https://www.gatsby.org\">By Right</a>\n          </pre>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayoutWP.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default LayoutWP\n"],"sourceRoot":""}